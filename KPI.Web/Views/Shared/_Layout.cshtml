@using KPI.Model.helpers
@using KPI.Model.ViewModel
@{
    var userProfile = Session["UserProfile"] as UserProfileVM;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewBag.Title - KPI System</title>
    @RenderPage("_CSS.cshtml")
    @RenderSection("Styles", required: false)
</head>
<body class="hold-transition skin-blue sidebar-collapse sidebar-mini">

    <!-- Site wrapper -->
    <div class="wrapper">
        @Html.Partial("header")


        <!-- =============================================== -->
        <!-- Left side column. contains the sidebar -->
        <aside class="main-sidebar">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                @if (userProfile != null)
                {

                    <ul class="sidebar-menu" data-widget="tree">
                        <li style="height: auto;">
                            <a href="/">
                                <i class="fa fa-dashboard"></i> <span>Home</span>
                            </a>
                        </li>
                        @if (userProfile.User.Permission != 1)
                        {
                            foreach (var item in userProfile.Menus)
                            {
                                if (item.Permission != 1)
                                {
                                    <li>
                                        <a href="@item.Link">
                                            <i class="@item.FontAwesome"></i> <span>@item.Name</span>
                                        </a>
                                    </li>
                                }
                            }
                        }
                        @if (userProfile.User.Permission == 1)
                        {
                            <li class="treeview">
                                <a href="#">
                                    <i class="fa fa-table"></i> <span>Admin</span>
                                    <span class="pull-right-container">
                                        <i class="fa fa-angle-left pull-right"></i>
                                    </span>
                                </a>
                                <ul class="treeview-menu">

                                    @foreach (var item in userProfile.Menus)
                                    {
                                        if (item.Permission == 1)
                                        {
                                            <li>
                                                <a href="@item.Link">
                                                    <i class="@item.FontAwesome"></i> <span>@item.Name</span>
                                                </a>
                                            </li>
                                        }
                                    }
                                </ul>
                            </li>
                        }

                    </ul>
                }

            </section>
            <!-- /.sidebar -->
        </aside>

        <!-- =============================================== -->
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            @RenderPage("_PageHeader.cshtml")

            <!-- Main content -->
            <section id="content" class="content" style="overflow-x: scroll; overflow-x:hidden">

                @RenderBody()

            </section>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->

        <footer class="main-footer">
            <div class="pull-right hidden-xs">
                <b>Version</b> 1.0.0
            </div>
            <strong>Copyright &copy; 2019 <a href="/">By Lab Team</a>.</strong>
        </footer>

        <div class="control-sidebar-bg"></div>
        <!--Loading-->
        <div id="main-loading-delay" style="display:none">
            <div class="lds-ripple"><div></div><div></div></div>
        </div>
    </div>
    @* ChangePassword *@
    <div class="modal fade" id="modal-group-change-password" style="display: none">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                    <h4 class="modal-title">Change password </h4>
                </div>
                <div class="modal-body">
                    <div>
                        <div class="box-body" id="ChangePassword">
                            <div class="form-group">
                                <label for="username">Username </label>
                                <input type="text" class="form-control username disabled" placeholder="username" disabled>
                            </div>
                            <div class="form-group">
                                <label for="password">Password </label>
                                <input type="password" class="form-control password" placeholder="Enter password">
                            </div>

                        </div>
                        <!-- /.box-body -->

                        <div class="box-footer">
                            <button id="btnChangePassword" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>

            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    @RenderPage("_Script.cshtml")
    @RenderSection("Scripts", required: false)
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
          
        //var signalRHubInitialized = false;

        //$(function () {
        //    InitializeSignalRHubStore();
        //});

        //function InitializeSignalRHubStore() {

        //    if (signalRHubInitialized)
        //        return;

        //    try {
        //        var clientHub = $.connection.NotificationHub;

                //clientHub.client.broadcastMessage = function (message) {

                //    if (message === "Refresh")
                //        ReloadNotification();
                //};

                //$.connection.hub.start().done(function () {
                //    console.log('bat dau hub');
                //   ReloadNotification();
                //    signalRHubInitialized = true;
                //});
                  //signalr method for push server message to client
        //        notificationHub.client.notify = function (message) {
        //            if (message && message.toLowerCase() == "added") {
        //                updateNotificationCount();
        //            }
        //        }
        //    } catch (err) {
        //        signalRHubInitialized = false;
        //    }
        //};

        //function ReloadNotification() {
         @*$.post('@(Url.Action("header", "Home", null, Request.Url.Scheme))')
                .done(function (response) {
                    console.log('Load lai');
                    console.log(response);
                    $("#liNotify").html(response)
                    if (!signalRHubInitialized)
                        InitializeSignalRHubStore();
                });*@
        //    $.post('/Home/GetNotifications')
        //        .done(function (response) {
        //            var data = response.data;
        //            var total = response.total;
        //            console.log(response);
        //            console.log('Load lai');

        //            var htmlNotification = '';
        //            $.each(data, function (i, item) {
        //                htmlNotification += `<li>
        //                                                    <a href="${item.Link}">
        //                                                        <i class="fa fa-user text-success"></i> ${item.Content}
        //                                                    </a>
        //                                                </li>`
        //            })

        //            var html = `<a href="#" class="dropdown-toggle" data-toggle="dropdown">
        //                                        <i class="fa fa-commenting-o"></i>
        //                                        <span class="label label-warning">${total}</span>
        //                                    </a>
        //                                    <ul class="dropdown-menu">
        //                                        <li class="header">You have ${total} notifications</li>
        //                                        <li>
        //                                            <!-- inner menu: contains the actual data -->
        //                                            <ul class="menu">
        //                                               ${htmlNotification}
        //                                            </ul>
        //                                        </li>
        //                                        <li class="footer"><a href="#">View all</a></li>
        //                                    </ul>`
        //            $(".notifications-menu").empty();
        //            $(".notifications-menu").html(html);
        //            if (!signalRHubInitialized)
        //                InitializeSignalRHubStore();
        //        });
        //};

        ////////////////////////////////////
        $(function () {
            // Click on notification icon for show notification
             $('#liNotify').on('show.bs.dropdown', function () {
                 var count = 0;
                   count = parseInt($('#liNotify span.count').html()) || 0;
                //only load notification if not already loaded
                if (count > 0) {
                    updateNotification();
                }
                $('span.count', this).html('&nbsp;');
            })

            // update notification 
            function updateNotification() {
                $('#liNotify').empty();
                //$('#notiContent').append($('<li>Loading...</li>'));

                $.ajax({
                    type: 'GET',
                    url: '/home/GetNotifications',
                    success: function (response) {
                        $('#notiContent').empty();
                        if (response.length  == 0) {
                            $('#liNotify').append($('<li>No data available</li>'));
                        }
                        $.each(response, function (index, value) {
                            $('#liNotify').append($('<li>New contact : ' + value.KPIName +' added</li>'));
                        });
                    },
                    error: function (error) {
                        console.log(error);
                    }
                })
            }
            // update notification count
            function updateNotificationCount() {
                var count = 0;
                count = parseInt($('span.count').html()) || 0;
                count++;
                $('span.count').html(count);
            }
            // signalr js code for start hub and send receive notification
            var notificationHub = $.connection.NotificationHub;
            $.connection.hub.start().done(function () {
                console.log('Notification hub started');
            });

            //signalr method for push server message to client
            notificationHub.client.notify = function (message) {
                if (message && message.toLowerCase() == "added") {
                    updateNotificationCount();
                }
            }

        })
    </script>
</body>
</html>
